// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  //在不创建外键的情况下进行关联查询
  //relationMode = "prisma"
}

//用户表
model User {
  id              Int                   @id @default(autoincrement())
  loginid         String                @unique
  nickname        String?
  password        String
  email           String?               @unique
  phones          String?               @unique
  isDel           Boolean               @default(false)
  createdAt       DateTime              @default(dbgenerated("now()")) @db.DateTime
  updatedAt       DateTime              @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.Timestamp(0) //解决prisma时区问题
  userHaderImg    UserHaderImg[]
  PhotoInfo       PhotoCollectionInfo[]
  PhotoCollection PhotosList[]
}

//用户头像表
model UserHaderImg {
  id              Int      @id @default(autoincrement())
  userId          Int
  userHaderImgUrl String
  isDel           Boolean  @default(false)
  createdAt       DateTime @default(dbgenerated("now()")) @db.DateTime
  updatedAt       DateTime @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.Timestamp(0)
  user            User?    @relation(fields: [userId], references: [id])
}

//照片合集信息表
model PhotoCollectionInfo {
  id                           Int                            @id @default(autoincrement())
  userId                       Int
  photoUrl                     String?
  photoName                    String
  photoDes                     String?
  isDel                        Boolean                        @default(false)
  createdAt                    DateTime                       @default(dbgenerated("now()")) @db.DateTime
  updatedAt                    DateTime                       @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.Timestamp(0)
  user                         User?                          @relation(fields: [userId], references: [id])
  PhotosListAndPhotoCollection PhotosListAndPhotoCollection[]
}

//照片表
model PhotosList {
  id             Int                            @id @default(autoincrement())
  userId         Int
  photoUrl       String?
  photoShootTime String?
  isDel          Boolean                        @default(false)
  createdAt      DateTime                       @default(dbgenerated("now()")) @db.DateTime
  updatedAt      DateTime                       @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.Timestamp(0)
  user           User?                          @relation(fields: [userId], references: [id])
  photoAndColl   PhotosListAndPhotoCollection[]
}

//照片与合集关系
model PhotosListAndPhotoCollection {
  id                Int                  @id @default(autoincrement())
  photoCollectionId Int
  photoId           Int
  createdAt         DateTime             @default(dbgenerated("now()")) @db.DateTime
  updatedAt         DateTime             @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.Timestamp(0)
  photoCollection   PhotoCollectionInfo? @relation(fields: [photoCollectionId], references: [id])
  photo             PhotosList?          @relation(fields: [photoId], references: [id])
}

//照片管理表
model PhotoCollectionMange {
  id                Int      @id @default(autoincrement())
  userId            Int
  photoCollectionId Int
  createdAt         DateTime @default(dbgenerated("now()")) @db.DateTime
  updatedAt         DateTime @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.Timestamp(0)
}
